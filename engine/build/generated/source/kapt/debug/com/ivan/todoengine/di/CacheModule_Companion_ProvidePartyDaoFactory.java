// Generated by Dagger (https://dagger.dev).
package com.ivan.todoengine.di;

import com.ivan.todoengine.data.base.AppDatabase;
import com.ivan.todoengine.data.local.activity.ActivityDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CacheModule_Companion_ProvidePartyDaoFactory implements Factory<ActivityDao> {
  private final CacheModule.Companion module;

  private final Provider<AppDatabase> appDatabaseProvider;

  public CacheModule_Companion_ProvidePartyDaoFactory(CacheModule.Companion module,
      Provider<AppDatabase> appDatabaseProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public ActivityDao get() {
    return providePartyDao(module, appDatabaseProvider.get());
  }

  public static CacheModule_Companion_ProvidePartyDaoFactory create(CacheModule.Companion module,
      Provider<AppDatabase> appDatabaseProvider) {
    return new CacheModule_Companion_ProvidePartyDaoFactory(module, appDatabaseProvider);
  }

  public static ActivityDao providePartyDao(CacheModule.Companion instance,
      AppDatabase appDatabase) {
    return Preconditions.checkNotNull(instance.providePartyDao(appDatabase), "Cannot return null from a non-@Nullable @Provides method");
  }
}
